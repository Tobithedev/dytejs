var Vadex=function(){let t;function n(n={}){if(t){var i=this;i.options=n,i.actions=i.options.actions,i.mutations=i.options.mutations,i.plugins=i.options.plugins,i.listeners=[],i.state=new Proxy(i.options.state||{},{set:function(t,n,i){return t[n]=i,!0}}),void 0===i.plugins&&(i.plugins=[]),i.plugins.forEach(function(t){return t(i)})}else t.warn("[Vadex Warn]: Dative Not Found\nTry Using Dative.use(Vadex) To install Vadex with Dative")}n.prototype.dispatch=function(n,i){var s;this.actions[n]||t.warn(`[Vadex warn]: action ${n} is undefined`),this.actions[n]({commit:this.commit.bind(this),state:(s=this.state,JSON.parse(JSON.stringify(s)))},i),this.listeners.forEach(t=>t(this.mutations,this.state))},n.prototype.commit=function(n,i){this.mutations[n]||t.warn(`[Vadex warn]: mutation ${n} is undefined`),this.mutations[n].call(null,this.state,i)},n.prototype.subscribe=function(t){return this.listeners.push(t),function(){const n=this.listeners.indexOf(t);this.listeners.splice(n,1)}};var i={Store:n,install:function(n){t&&function(){console.warn("[Vadex Tips]: ",arguments[0])}("Vadex is already installed. Dative.use(Vadex) should be called only once.");i=n,t=i;var i},version:"v1.0.0"};return void 0!==window.Dative&&window.Dative&&window.Dative.use(i),i}();